[{"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\ForgotPassword.js":"1","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\PrivateRoute.js":"2","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\App.js":"3","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\PaymentFormStripe.jsx":"4","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"5","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\index.js":"6","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Products.jsx":"7","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\authStyles.js":"8","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\AddresForm.jsx":"9","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\productsStyles.js":"10","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Review.jsx":"11","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\contexts\\ReactContext.js":"12","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\Login.js":"13","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\UpdateProfile.js":"14","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\firebase.js":"15","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\index.js":"16","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\Signup.js":"17","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\Cart.jsx":"18","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Navbar\\Navbar.jsx":"19","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\ProductView.jsx":"20","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Confirmation.jsx":"21","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\utils\\styles.js":"22","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\productViewStyles.js":"23","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Navbar\\NavStyles.js":"24","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\Product.jsx":"25","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\productStyles.js":"26","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\CustomTextField.jsx":"27","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\cartStyles.js":"28","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\CartItem\\CartItem.jsx":"29","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\PaymentFormTestGateway.jsx":"30","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\checkoutStyels.js":"31","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Footer.js":"32","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\headlessCMS\\commerce.js":"33"},{"size":2329,"mtime":1615485803314,"results":"34","hashOfConfig":"35"},{"size":488,"mtime":1613821962560,"results":"36","hashOfConfig":"35"},{"size":1434,"mtime":1618441329104,"results":"37","hashOfConfig":"35"},{"size":6130,"mtime":1618361210824,"results":"38","hashOfConfig":"39"},{"size":4583,"mtime":1618443302299,"results":"40","hashOfConfig":"35"},{"size":280,"mtime":1618397886686,"results":"41","hashOfConfig":"35"},{"size":858,"mtime":1613820556585,"results":"42","hashOfConfig":"35"},{"size":519,"mtime":1612556196790,"results":"43","hashOfConfig":"35"},{"size":5925,"mtime":1618443307554,"results":"44","hashOfConfig":"35"},{"size":369,"mtime":1613786458843,"results":"45","hashOfConfig":"35"},{"size":3912,"mtime":1618394327866,"results":"46","hashOfConfig":"35"},{"size":4101,"mtime":1618443319381,"results":"47","hashOfConfig":"35"},{"size":3915,"mtime":1615502504548,"results":"48","hashOfConfig":"35"},{"size":4468,"mtime":1615485785303,"results":"49","hashOfConfig":"35"},{"size":516,"mtime":1618441796814,"results":"50","hashOfConfig":"35"},{"size":587,"mtime":1611361658227,"results":"51","hashOfConfig":"35"},{"size":4583,"mtime":1613820444499,"results":"52","hashOfConfig":"35"},{"size":3099,"mtime":1618441352274,"results":"53","hashOfConfig":"35"},{"size":3504,"mtime":1618445664893,"results":"54","hashOfConfig":"35"},{"size":5542,"mtime":1618414816525,"results":"55","hashOfConfig":"35"},{"size":8151,"mtime":1618394242681,"results":"56","hashOfConfig":"35"},{"size":474,"mtime":1618441600814,"results":"57","hashOfConfig":"35"},{"size":423,"mtime":1618414707880,"results":"58","hashOfConfig":"35"},{"size":1720,"mtime":1612066849328,"results":"59","hashOfConfig":"35"},{"size":2324,"mtime":1613820505040,"results":"60","hashOfConfig":"35"},{"size":577,"mtime":1613786482158,"results":"61","hashOfConfig":"35"},{"size":566,"mtime":1609552811075,"results":"62","hashOfConfig":"35"},{"size":611,"mtime":1612065382555,"results":"63","hashOfConfig":"35"},{"size":1540,"mtime":1613820387019,"results":"64","hashOfConfig":"35"},{"size":3692,"mtime":1618443314406,"results":"65","hashOfConfig":"35"},{"size":1441,"mtime":1618394136556,"results":"66","hashOfConfig":"35"},{"size":562,"mtime":1618400243214,"results":"67","hashOfConfig":"35"},{"size":130,"mtime":1609552811083,"results":"68","hashOfConfig":"35"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"fehtp7",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"idxag",{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\ForgotPassword.js",[],["140","141"],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\PrivateRoute.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\App.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\PaymentFormStripe.jsx",["142"],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["143"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  Paper,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Typography,\r\n  CircularProgress,\r\n  Divider,\r\n  Button,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\n\r\nimport useStyles from \"../checkoutStyels\";\r\nimport AddressForm from \"../AddresForm\";\r\nimport PaymentForm from \"../PaymentFormTestGateway\";\r\nimport { commerce } from \"../../../headlessCMS/commerce\";\r\nimport { useReactContext } from \"../../../contexts/ReactContext\";\r\n\r\nconst steps = [\"Shipping address\", \"Payment details\"];\r\n// const steps = [\r\n//   \"Customer information\",\r\n//   \"Shipping details\",\r\n//   \"Payment information\",\r\n// ];\r\n\r\nconst Checkout = () => {\r\n  const { cart } = useReactContext();\r\n  const [order, setOrder] = useState(null);\r\n  const [orderError, setOrderError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [checkoutToken, setCkeckoutToken] = useState(null);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const checkStyles = useStyles();\r\n  const history = useHistory();\r\n  const generateToken = async () => {\r\n    try {\r\n      const token = await commerce.checkout.generateToken(cart.id, {\r\n        type: \"cart\",\r\n      });\r\n      console.log(\"the generated token\", token);\r\n      setCkeckoutToken(token);\r\n    } catch (error) {\r\n      console.log(error);\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    generateToken();\r\n  }, []);\r\n\r\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n  const next = (data) => {\r\n    setShippingData(data);\r\n    nextStep();\r\n  };\r\n\r\n  let Confirmation = () =>\r\n    order !== null ? (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h5\">\r\n            Thank your {order.customer.firstname}, {order.customer.lastname} for\r\n            your purchase.\r\n          </Typography>\r\n          <Typography variant=\"h6\" component={Link} to=\"/confirmation\">\r\n            More Information!\r\n          </Typography>\r\n          <Divider className={checkStyles.divider} />\r\n          <Typography variant=\"subtitle2\">\r\n            Order ref: {order.customer_reference}\r\n          </Typography>\r\n        </div>\r\n        <br />\r\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">\r\n          Back to Home\r\n        </Button>\r\n      </>\r\n    ) : orderError !== null ? (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h5\">\r\n            Your puchase has been not been completed. {orderError}\r\n          </Typography>\r\n          <Divider className={checkStyles.divider} />\r\n        </div>\r\n        <br />\r\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">\r\n          Back to Home\r\n        </Button>\r\n      </>\r\n    ) : (\r\n      <div className={checkStyles.spinner}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  // if(error){\r\n  //     <>\r\n  //         <Typography variant='h5'>Error: ${error}</Typography>\r\n  //         <br />\r\n  //         <Button\r\n  //         component={Link}\r\n  //         to='/'\r\n  //         variant='outlined'\r\n  //         type='button'>\r\n  //             Back to Home\r\n  //         </Button>\r\n  //     </>\r\n  // }\r\n\r\n  const Form = () =>\r\n    activeStep === 0 ? (\r\n      <AddressForm checkoutToken={checkoutToken} next={next} />\r\n    ) : (\r\n      <PaymentForm\r\n        shippingData={shippingData}\r\n        checkoutToken={checkoutToken}\r\n        backStep={backStep}\r\n        nextStep={nextStep}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n        setOrder={setOrder}\r\n        setOrderError={setOrderError}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <div className={checkStyles.toolbar} />\r\n      <main className={checkStyles.layout}>\r\n        <Paper className={checkStyles.paper}>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={checkStyles.stepper}>\r\n            {steps.map((step) => (\r\n              <Step key={step}>\r\n                <StepLabel>{step}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n\r\n          {/* {checkoutToken && <Form />} */}\r\n          {activeStep === steps.length ? (\r\n            <Confirmation />\r\n          ) : (\r\n            checkoutToken && <Form />\r\n          )}\r\n        </Paper>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\index.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Products.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\authStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\AddresForm.jsx",["144","145"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport FormInput from \"./CustomTextField\";\r\nimport { commerce } from \"../../headlessCMS/commerce\";\r\n\r\nconst AddresForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCoutnries] = useState([]);\r\n  const [shippingCountry, setShippingCoutnry] = useState(\"\");\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n  const [shippingPrice, setShippingPrice] = useState();\r\n  const methods = useForm();\r\n\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n    id: code,\r\n    label: name,\r\n  }));\r\n  const subdivisions = Object.entries(\r\n    shippingSubdivisions\r\n  ).map(([code, name]) => ({ id: code, label: name }));\r\n  const options = shippingOptions.map((sO) => ({\r\n    id: sO.id,\r\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\r\n  }));\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    // commerce.services.localeListShippingCountries(checkoutTokenId)\r\n    // .then((response) => console.log(response));\r\n\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n    //const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n    setShippingCoutnries(countries);\r\n    setShippingCoutnry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivsions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (\r\n    checkoutTokenId,\r\n    country,\r\n    region = null\r\n  ) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region }\r\n    );\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n\r\n    setShippingPrice(options[0].price.raw);\r\n    // console.log(shippingPrice)\r\n    // console.log('inside fetching shipping options')\r\n\r\n    // console.log(shippingOptions)\r\n    // console.log(shippingOption)\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivsions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubdivision\r\n      );\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping Address\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            next({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubdivision,\r\n              shippingOption,\r\n              shippingPrice,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <FormInput name=\"firstName\" label=\"First Name\" />\r\n            <FormInput name=\"lastName\" label=\"Last Name\" />\r\n            <FormInput name=\"address\" label=\"Address\" />\r\n            <FormInput name=\"email\" label=\"Email\" />\r\n            <FormInput name=\"city\" label=\"City\" />\r\n            <FormInput name=\"zip\" label=\"Postal Code\" />\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select\r\n                value={shippingCountry}\r\n                fullWidth\r\n                onChange={(e) => setShippingCoutnry(e.target.value)}\r\n              >\r\n                {countries.map((country) => (\r\n                  <MenuItem key={country.id} value={country.id}>\r\n                    {country.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivison</InputLabel>\r\n              <Select\r\n                value={shippingSubdivision}\r\n                fullWidth\r\n                onChange={(e) => setShippingSubdivision(e.target.value)}\r\n              >\r\n                {subdivisions.map((subdivision) => (\r\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                    {subdivision.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select\r\n                value={shippingOption}\r\n                fullWidth\r\n                onChange={(e) => setShippingOption(e.target.value)}\r\n              >\r\n                {options.map((option) => (\r\n                  <MenuItem key={option.id} value={option.id}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: \"flex\", jsutifyContent: \"space-between\" }}>\r\n            <Button component={Link} to=\"/cart\" variant=\"outlined\">\r\n              Back to Cart\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              {shippingOption ? \"Next\" : <CircularProgress color=\"secondary\" />}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddresForm;\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\productsStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Review.jsx",["146"],"import React, { useState, useEffect } from \"react\";\r\nimport { Typography, List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nconst Review = ({ checkoutToken, shippingData }) => {\r\n  const [totalShippingCost, setTotalShippingCost] = useState(0);\r\n  const totalShippingArray = [];\r\n\r\n  const calProductShippingPrice = (shippingPrice, quantity) => {\r\n    const totalshipping = shippingPrice * quantity;\r\n    totalShippingArray.push(totalshipping);\r\n    // const totalshipping2 = totalshipping.toFixed(2)\r\n    return `${checkoutToken.live.currency.symbol}${(\r\n      shippingPrice * quantity\r\n    ).toFixed(2)}`;\r\n  };\r\n\r\n  const calTotalShippingPrice = () => {\r\n    setTotalShippingCost(totalShippingArray.reduce((a, b) => a + b, 0));\r\n    console.log(totalShippingCost);\r\n  };\r\n\r\n  const totalPrice =\r\n    Number(totalShippingCost) + Number(checkoutToken.live.total.raw);\r\n\r\n  //  const totalPrice2 = totalShippingCost + checkoutToken.live.total.raw\r\n\r\n  // const countTotalPrice = () => {\r\n  // const pricetotalNumber = checkoutToken.live.total.raw + totalShippingCost\r\n  // const pricetotal = pricetotalNumber.toFixed(2)\r\n  // const setpricetotal = `${checkoutToken.live.currency.symbol}${pricetotal}`\r\n  // setTotalPrice(totalShippingCost)\r\n  // console.log(totalShippingCost)\r\n  // setTotalPrice( Number(totalShippingCost) + Number(checkoutToken.live.total.raw))\r\n  // }\r\n\r\n  useEffect(() => {\r\n    //    if  (totalShippingArray?.length > 0) {\r\n\r\n    if (totalShippingArray.length > 0) {\r\n      console.log(\"array has shipping prices\");\r\n      console.log(totalShippingArray);\r\n      calTotalShippingPrice();\r\n      // setTotalShippingCost(totalShippingArray.reduce((a,b) => a + b, 0))\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {checkoutToken.live.line_items.map((product) => (\r\n          <div key={product.name}>\r\n            <ListItem style={{ padding: \"10px 0\" }}>\r\n              <ListItemText\r\n                primary={product.name}\r\n                secondary={`Quantity: ${product.quantity}`}\r\n              />\r\n              <Typography variant=\"body2\">\r\n                {product.line_total.formatted_with_symbol}\r\n              </Typography>\r\n            </ListItem>\r\n\r\n            <ListItem style={{ padding: \"10px 0\" }}>\r\n              <ListItemText secondary={`Shipping: `} />\r\n              <Typography variant=\"body2\">\r\n                {calProductShippingPrice(\r\n                  shippingData.shippingPrice,\r\n                  product.quantity\r\n                )}\r\n              </Typography>\r\n            </ListItem>\r\n          </div>\r\n        ))}\r\n        {/* <ListItem style={{padding: '10px 0'}} >\r\n                        <ListItemText>Shipping: </ListItemText>\r\n                        <Typography variant='body2'>{symboledShippingPrice}</Typography>\r\n                    </ListItem> */}\r\n        <hr />\r\n        <ListItem style={{ padding: \"10px 0\" }}>\r\n          <ListItemText secondary=\"Products Cost\" />\r\n          <Typography variant=\"subtitle1\">\r\n            {checkoutToken.live.total.formatted_with_symbol}\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem style={{ padding: \"10px 0\" }}>\r\n          <ListItemText secondary=\"Shipping Cost\" />\r\n          <Typography variant=\"subtitle1\">\r\n            {checkoutToken.live.currency.symbol +\r\n              Number(totalShippingCost).toFixed(2)}\r\n          </Typography>\r\n        </ListItem>\r\n        <hr />\r\n        <ListItem style={{ padding: \"10px 0\" }}>\r\n          <ListItemText primary=\"total\" />\r\n          <Typography variant=\"subtitle1\" style={{ fontWeight: \"700\" }}>\r\n            {/* {totalPrice} */}\r\n            {checkoutToken.live.currency.symbol + totalPrice.toFixed(2)}\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\contexts\\ReactContext.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\Login.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\UpdateProfile.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\firebase.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\index.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\Signup.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\Cart.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Navbar\\Navbar.jsx",["147"],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\ProductView.jsx",["148"],"import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalStyles } from \"../../../utils/styles\";\r\nimport useStyles from \"./productViewStyles\";\r\nimport { useReactContext } from \"../../../contexts/ReactContext\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  MenuItem,\r\n  Select,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst ProductView = () => {\r\n  const { products, handleAddToCart } = useReactContext();\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const productId = useParams();\r\n\r\n  const globalStyles = useGlobalStyles();\r\n  const viewStyles = useStyles();\r\n\r\n  return (\r\n    <div className={viewStyles.content}>\r\n      <div className={viewStyles.toolbar} />\r\n      {products.map(\r\n        (product) =>\r\n          product.id === productId.id && (\r\n            <Slide key={product.name} direction=\"up\" in={true}>\r\n              <Grid container spacing={1} xl={8} className={viewStyles.center}>\r\n                <Grid item md={6}>\r\n                  <img\r\n                    src={product.media.source}\r\n                    alt={product.name}\r\n                    className={viewStyles.largeImage}\r\n                  />\r\n                </Grid>\r\n                <Grid item md={3} xs={12}>\r\n                  <List>\r\n                    <ListItem>\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant=\"h6\"\r\n                        color=\"textPrimary\"\r\n                        component=\"h1\"\r\n                      >\r\n                        {product.name}\r\n                      </Typography>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <Box\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: product.description,\r\n                        }}\r\n                      ></Box>\r\n                    </ListItem>\r\n                  </List>\r\n                </Grid>\r\n                <Grid item md={3} xs={12}>\r\n                  <Card>\r\n                    <List>\r\n                      <ListItem>\r\n                        <Grid container>\r\n                          <Grid item xs={6}>\r\n                            Price\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            {product.price.formatted_with_symbol}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </ListItem>\r\n\r\n                      <ListItem>\r\n                        <Grid alignItems=\"center\" container>\r\n                          <Grid item xs={6}>\r\n                            Status\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            {/* <Button color='primary' onClick={() => handleAddToCart(product.id, quantity)}>Buy</Button> */}\r\n                            {product.quantity > 0 ? (\r\n                              <Alert icon={false} severity=\"success\">\r\n                                In Stock\r\n                              </Alert>\r\n                            ) : (\r\n                              <Alert icon={false} severity=\"error\">\r\n                                Unavailable\r\n                              </Alert>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </ListItem>\r\n                      {product.quantity > 0 && (\r\n                        <>\r\n                          <ListItem>\r\n                            <Grid container justify=\"flex-end\">\r\n                              <Grid item xs={6}>\r\n                                Quantity\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <Select\r\n                                  labelId=\"quanitity-label\"\r\n                                  id=\"quanitity\"\r\n                                  fullWidth\r\n                                  onChange={(e) => setQuantity(e.target.value)}\r\n                                  value={quantity}\r\n                                >\r\n                                  {[...Array(product.quantity).keys()].map(\r\n                                    (x) => (\r\n                                      <MenuItem key={x + 1} value={x + 1}>\r\n                                        {x + 1}\r\n                                      </MenuItem>\r\n                                    )\r\n                                  )}\r\n                                </Select>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <Button\r\n                              type=\"button\"\r\n                              fullWidth\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                handleAddToCart(product.id, quantity)\r\n                              }\r\n                            >\r\n                              Add to cart\r\n                            </Button>\r\n                          </ListItem>\r\n                        </>\r\n                      )}\r\n                    </List>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </Slide>\r\n          )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductView;\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Confirmation.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\utils\\styles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\productViewStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Navbar\\NavStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\Product.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\productStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\cartStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\PaymentFormTestGateway.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\checkoutStyels.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Footer.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\headlessCMS\\commerce.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":4,"column":39,"nodeType":"155","messageId":"156","endLine":4,"endColumn":48},{"ruleId":"157","severity":1,"message":"158","line":52,"column":6,"nodeType":"159","endLine":52,"endColumn":8,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":80,"column":6,"nodeType":"159","endLine":80,"endColumn":8,"suggestions":"162"},{"ruleId":"157","severity":1,"message":"163","line":93,"column":6,"nodeType":"159","endLine":93,"endColumn":27,"suggestions":"164"},{"ruleId":"157","severity":1,"message":"165","line":45,"column":6,"nodeType":"159","endLine":45,"endColumn":8,"suggestions":"166"},{"ruleId":"153","severity":1,"message":"167","line":20,"column":10,"nodeType":"155","messageId":"156","endLine":20,"endColumn":15},{"ruleId":"153","severity":1,"message":"168","line":26,"column":9,"nodeType":"155","messageId":"156","endLine":26,"endColumn":21},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateToken'. Either include it or remove the dependency array.","ArrayExpression",["171"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["172"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["173"],"React Hook useEffect has missing dependencies: 'calTotalShippingPrice' and 'totalShippingArray'. Either include them or remove the dependency array.",["174"],"'error' is assigned a value but never used.","'globalStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [generateToken]",{"range":"183","text":"184"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"185","text":"186"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"187","text":"188"},"Update the dependencies array to be: [calTotalShippingPrice, totalShippingArray]",{"range":"189","text":"190"},[1533,1535],"[generateToken]",[2676,2678],"[checkoutToken.id]",[2971,2992],"[checkoutToken.id, shippingCountry, shippingSubdivision]",[1709,1711],"[calTotalShippingPrice, totalShippingArray]"]