[{"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\ForgotPassword.js":"1","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\PrivateRoute.js":"2","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\App.js":"3","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\PaymentFormStripe.jsx":"4","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"5","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\index.js":"6","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Products.jsx":"7","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\authStyles.js":"8","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\AddresForm.jsx":"9","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\productsStyles.js":"10","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Review.jsx":"11","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\contexts\\ReactContext.js":"12","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\Login.js":"13","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\UpdateProfile.js":"14","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\firebase.js":"15","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\index.js":"16","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\lib\\commerce.js":"17","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\Signup.js":"18","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\Cart.jsx":"19","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Navbar\\Navbar.jsx":"20","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\ProductView.jsx":"21","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Confirmation.jsx":"22","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\utils\\styles.js":"23","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\productViewStyles.js":"24","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Navbar\\NavStyles.js":"25","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\Product.jsx":"26","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\productStyles.js":"27","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\CustomTextField.jsx":"28","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\cartStyles.js":"29","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\CartItem\\CartItem.jsx":"30","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\PaymentFormTestGateway.jsx":"31","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\checkoutStyels.js":"32","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Footer.js":"33"},{"size":2329,"mtime":1615485803314,"results":"34","hashOfConfig":"35"},{"size":488,"mtime":1613821962560,"results":"36","hashOfConfig":"35"},{"size":1487,"mtime":1618400220489,"results":"37","hashOfConfig":"35"},{"size":6130,"mtime":1618361210824,"results":"38","hashOfConfig":"35"},{"size":4742,"mtime":1618394047999,"results":"39","hashOfConfig":"35"},{"size":280,"mtime":1618397886686,"results":"40","hashOfConfig":"35"},{"size":858,"mtime":1613820556585,"results":"41","hashOfConfig":"35"},{"size":519,"mtime":1612556196790,"results":"42","hashOfConfig":"35"},{"size":6400,"mtime":1611529914731,"results":"43","hashOfConfig":"35"},{"size":369,"mtime":1613786458843,"results":"44","hashOfConfig":"35"},{"size":3912,"mtime":1618394327866,"results":"45","hashOfConfig":"35"},{"size":4107,"mtime":1618386803108,"results":"46","hashOfConfig":"35"},{"size":3915,"mtime":1615502504548,"results":"47","hashOfConfig":"35"},{"size":4468,"mtime":1615485785303,"results":"48","hashOfConfig":"35"},{"size":523,"mtime":1615487214778,"results":"49","hashOfConfig":"35"},{"size":587,"mtime":1611361658227,"results":"50","hashOfConfig":"35"},{"size":130,"mtime":1609552811083,"results":"51","hashOfConfig":"35"},{"size":4583,"mtime":1613820444499,"results":"52","hashOfConfig":"35"},{"size":3746,"mtime":1613820374478,"results":"53","hashOfConfig":"35"},{"size":3502,"mtime":1613820487272,"results":"54","hashOfConfig":"35"},{"size":5542,"mtime":1618414816525,"results":"55","hashOfConfig":"35"},{"size":8151,"mtime":1618394242681,"results":"56","hashOfConfig":"35"},{"size":1236,"mtime":1618393999268,"results":"57","hashOfConfig":"35"},{"size":423,"mtime":1618414707880,"results":"58","hashOfConfig":"35"},{"size":1720,"mtime":1612066849328,"results":"59","hashOfConfig":"35"},{"size":2324,"mtime":1613820505040,"results":"60","hashOfConfig":"35"},{"size":577,"mtime":1613786482158,"results":"61","hashOfConfig":"35"},{"size":566,"mtime":1609552811075,"results":"62","hashOfConfig":"35"},{"size":611,"mtime":1612065382555,"results":"63","hashOfConfig":"35"},{"size":1540,"mtime":1613820387019,"results":"64","hashOfConfig":"35"},{"size":3684,"mtime":1618389589106,"results":"65","hashOfConfig":"35"},{"size":1441,"mtime":1618394136556,"results":"66","hashOfConfig":"35"},{"size":562,"mtime":1618400243214,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"idxag",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\ForgotPassword.js",[],["144","145"],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\PrivateRoute.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\App.js",["146","147"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { AuthProvider } from \"./contexts/ReactContext\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport Footer from \"./components/Footer\";\r\nimport {\r\n  Products,\r\n  Navbar,\r\n  Cart,\r\n  Checkout,\r\n  Login,\r\n  ForgotPassword,\r\n  UpdateProfile,\r\n  Signup,\r\n  ProductView,\r\n  Confirmation,\r\n} from \"./components\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <AuthProvider>\r\n          <Navbar />\r\n          <Switch>\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/update-profile\"\r\n              component={UpdateProfile}\r\n            />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n\r\n            <Route exact path=\"/\">\r\n              <Products />\r\n            </Route>\r\n\r\n            <Route exact path=\"/cart\">\r\n              <Cart />\r\n            </Route>\r\n\r\n            <PrivateRoute exact path=\"/checkout\" component={Checkout} />\r\n\r\n            <Route exact path=\"/confirmation\" component={Confirmation} />\r\n\r\n            <Route exact path=\"/:id\">\r\n              <ProductView />\r\n            </Route>\r\n          </Switch>\r\n          <Footer />\r\n        </AuthProvider>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\PaymentFormStripe.jsx",["148"],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["149","150"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  Paper,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Typography,\r\n  CircularProgress,\r\n  Divider,\r\n  Button,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useGlobalStyles } from \"../../../utils/styles\";\r\nimport useStyles from \"../checkoutStyels\";\r\nimport AddressForm from \"../AddresForm\";\r\nimport PaymentForm from \"../PaymentFormTestGateway\";\r\nimport { commerce } from \"../../../lib/commerce\";\r\nimport { useReactContext } from \"../../../contexts/ReactContext\";\r\n\r\nconst steps = [\"Shipping address\", \"Payment details\"];\r\n// const steps = [\r\n//   \"Customer information\",\r\n//   \"Shipping details\",\r\n//   \"Payment information\",\r\n// ];\r\n\r\nconst Checkout = () => {\r\n  const { cart } = useReactContext();\r\n  const [order, setOrder] = useState(null);\r\n  const [orderError, setOrderError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [checkoutToken, setCkeckoutToken] = useState(null);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const globalStyles = useGlobalStyles();\r\n  const checkStyles = useStyles();\r\n  const history = useHistory();\r\n  let renders = 0;\r\n  const generateToken = async () => {\r\n    try {\r\n      const token = await commerce.checkout.generateToken(cart.id, {\r\n        type: \"cart\",\r\n      });\r\n      console.log(\"the generated token\", token);\r\n      setCkeckoutToken(token);\r\n    } catch (error) {\r\n      console.log(error);\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    renders += 1;\r\n    generateToken();\r\n    console.log(renders);\r\n  }, []);\r\n\r\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n  const next = (data) => {\r\n    setShippingData(data);\r\n    nextStep();\r\n  };\r\n\r\n  let Confirmation = () =>\r\n    order !== null ? (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h5\">\r\n            Thank your {order.customer.firstname}, {order.customer.lastname} for\r\n            your purchase.\r\n          </Typography>\r\n          <Typography variant=\"h6\" component={Link} to=\"/confirmation\">\r\n            More Information!\r\n          </Typography>\r\n          <Divider className={checkStyles.divider} />\r\n          <Typography variant=\"subtitle2\">\r\n            Order ref: {order.customer_reference}\r\n          </Typography>\r\n        </div>\r\n        <br />\r\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">\r\n          Back to Home\r\n        </Button>\r\n      </>\r\n    ) : orderError !== null ? (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h5\">\r\n            Your puchase has been not been completed. {orderError}\r\n          </Typography>\r\n          <Divider className={checkStyles.divider} />\r\n        </div>\r\n        <br />\r\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">\r\n          Back to Home\r\n        </Button>\r\n      </>\r\n    ) : (\r\n      <div className={checkStyles.spinner}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  // if(error){\r\n  //     <>\r\n  //         <Typography variant='h5'>Error: ${error}</Typography>\r\n  //         <br />\r\n  //         <Button\r\n  //         component={Link}\r\n  //         to='/'\r\n  //         variant='outlined'\r\n  //         type='button'>\r\n  //             Back to Home\r\n  //         </Button>\r\n  //     </>\r\n  // }\r\n\r\n  const Form = () =>\r\n    activeStep === 0 ? (\r\n      <AddressForm checkoutToken={checkoutToken} next={next} />\r\n    ) : (\r\n      <PaymentForm\r\n        shippingData={shippingData}\r\n        checkoutToken={checkoutToken}\r\n        backStep={backStep}\r\n        nextStep={nextStep}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n        setOrder={setOrder}\r\n        setOrderError={setOrderError}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <div className={checkStyles.toolbar} />\r\n      <main className={checkStyles.layout}>\r\n        <Paper className={checkStyles.paper}>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={checkStyles.stepper}>\r\n            {steps.map((step) => (\r\n              <Step key={step}>\r\n                <StepLabel>{step}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n\r\n          {/* {checkoutToken && <Form />} */}\r\n          {activeStep === steps.length ? (\r\n            <Confirmation />\r\n          ) : (\r\n            checkoutToken && <Form />\r\n          )}\r\n        </Paper>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\index.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Products.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\authStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\AddresForm.jsx",["151","152"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {InputLabel, Select, MenuItem, Button , Grid, Typography, CircularProgress} from '@material-ui/core'\r\nimport {useForm, FormProvider} from 'react-hook-form'\r\nimport FormInput from './CustomTextField'\r\nimport {commerce} from '../../lib/commerce'\r\n\r\nconst AddresForm = ({checkoutToken, next}) => {\r\n    \r\n\r\n\r\n    const [shippingCountries, setShippingCoutnries] = useState([])\r\n    const [shippingCountry, setShippingCoutnry] = useState('')\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([])\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('')\r\n    const [shippingOptions, setShippingOptions] = useState([])\r\n    const [shippingOption, setShippingOption] = useState('')\r\n    const [shippingPrice, setShippingPrice] = useState()\r\n    const methods = useForm();\r\n\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id:code, label:name}))\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({id:code, label:name}))\r\n    const options = shippingOptions.map((sO) => ({id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})`}))\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        // commerce.services.localeListShippingCountries(checkoutTokenId)\r\n        // .then((response) => console.log(response));\r\n        \r\n        const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n        //const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n        setShippingCoutnries(countries)\r\n        setShippingCoutnry(Object.keys(countries)[0])\r\n        \r\n    }\r\n\r\n    const fetchSubdivsions = async (countryCode) => {\r\n        const {subdivisions} = await commerce.services.localeListSubdivisions(countryCode)\r\n        setShippingSubdivisions(subdivisions)\r\n        setShippingSubdivision(Object.keys(subdivisions)[0])\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {country, region})\r\n        setShippingOptions(options)\r\n        setShippingOption(options[0].id)\r\n\r\n        setShippingPrice(options[0].price.raw)\r\n        // console.log(shippingPrice)\r\n        // console.log('inside fetching shipping options')\r\n\r\n        // console.log(shippingOptions)\r\n        // console.log(shippingOption)\r\n\r\n    }\r\n\r\n    useEffect(()=> {\r\n        console.log('inside AddressForm useEffect')\r\n        console.log(checkoutToken)\r\n        fetchShippingCountries(checkoutToken.id)\r\n     \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(shippingCountry) fetchSubdivsions(shippingCountry)\r\n    }, [shippingCountry])\r\n\r\n    useEffect(()=> {\r\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision)\r\n    }, [shippingSubdivision])\r\n\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption, shippingPrice }))}>\r\n                    <Grid container spacing={3}>\r\n\r\n                        \r\n                        <FormInput  name='firstName' label='First Name' />\r\n                        <FormInput  name='lastName' label='Last Name' />\r\n                        <FormInput  name='address' label='Address' />\r\n                        <FormInput  name='email' label='Email' />\r\n                        <FormInput  name='city' label='City' />\r\n                        <FormInput name='zip' label='Postal Code' />\r\n\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCoutnry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                <MenuItem key={country.id} value={country.id}>\r\n                                    {country.label}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivison</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                    {subdivision.label}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {options.map((option) => (\r\n                                <MenuItem key={option.id} value={option.id} >\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid> \r\n                    <br />\r\n                    <div style={{display: 'flex', jsutifyContent: 'space-between'}}>\r\n                        <Button component={Link} to='/cart' variant='outlined'>Back to Cart</Button>\r\n                        <Button type='submit' variant='contained' color='primary'>\r\n                            {\r\n                                shippingOption \r\n                                    ? 'Next' \r\n                                    : ( <CircularProgress color='secondary' /> )\r\n                            }\r\n                            \r\n                            </Button>\r\n                    </div>\r\n\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddresForm\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\productsStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Review.jsx",["153"],"import React, { useState, useEffect } from \"react\";\r\nimport { Typography, List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nconst Review = ({ checkoutToken, shippingData }) => {\r\n  const [totalShippingCost, setTotalShippingCost] = useState(0);\r\n  const totalShippingArray = [];\r\n\r\n  const calProductShippingPrice = (shippingPrice, quantity) => {\r\n    const totalshipping = shippingPrice * quantity;\r\n    totalShippingArray.push(totalshipping);\r\n    // const totalshipping2 = totalshipping.toFixed(2)\r\n    return `${checkoutToken.live.currency.symbol}${(\r\n      shippingPrice * quantity\r\n    ).toFixed(2)}`;\r\n  };\r\n\r\n  const calTotalShippingPrice = () => {\r\n    setTotalShippingCost(totalShippingArray.reduce((a, b) => a + b, 0));\r\n    console.log(totalShippingCost);\r\n  };\r\n\r\n  const totalPrice =\r\n    Number(totalShippingCost) + Number(checkoutToken.live.total.raw);\r\n\r\n  //  const totalPrice2 = totalShippingCost + checkoutToken.live.total.raw\r\n\r\n  // const countTotalPrice = () => {\r\n  // const pricetotalNumber = checkoutToken.live.total.raw + totalShippingCost\r\n  // const pricetotal = pricetotalNumber.toFixed(2)\r\n  // const setpricetotal = `${checkoutToken.live.currency.symbol}${pricetotal}`\r\n  // setTotalPrice(totalShippingCost)\r\n  // console.log(totalShippingCost)\r\n  // setTotalPrice( Number(totalShippingCost) + Number(checkoutToken.live.total.raw))\r\n  // }\r\n\r\n  useEffect(() => {\r\n    //    if  (totalShippingArray?.length > 0) {\r\n\r\n    if (totalShippingArray.length > 0) {\r\n      console.log(\"array has shipping prices\");\r\n      console.log(totalShippingArray);\r\n      calTotalShippingPrice();\r\n      // setTotalShippingCost(totalShippingArray.reduce((a,b) => a + b, 0))\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {checkoutToken.live.line_items.map((product) => (\r\n          <div key={product.name}>\r\n            <ListItem style={{ padding: \"10px 0\" }}>\r\n              <ListItemText\r\n                primary={product.name}\r\n                secondary={`Quantity: ${product.quantity}`}\r\n              />\r\n              <Typography variant=\"body2\">\r\n                {product.line_total.formatted_with_symbol}\r\n              </Typography>\r\n            </ListItem>\r\n\r\n            <ListItem style={{ padding: \"10px 0\" }}>\r\n              <ListItemText secondary={`Shipping: `} />\r\n              <Typography variant=\"body2\">\r\n                {calProductShippingPrice(\r\n                  shippingData.shippingPrice,\r\n                  product.quantity\r\n                )}\r\n              </Typography>\r\n            </ListItem>\r\n          </div>\r\n        ))}\r\n        {/* <ListItem style={{padding: '10px 0'}} >\r\n                        <ListItemText>Shipping: </ListItemText>\r\n                        <Typography variant='body2'>{symboledShippingPrice}</Typography>\r\n                    </ListItem> */}\r\n        <hr />\r\n        <ListItem style={{ padding: \"10px 0\" }}>\r\n          <ListItemText secondary=\"Products Cost\" />\r\n          <Typography variant=\"subtitle1\">\r\n            {checkoutToken.live.total.formatted_with_symbol}\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem style={{ padding: \"10px 0\" }}>\r\n          <ListItemText secondary=\"Shipping Cost\" />\r\n          <Typography variant=\"subtitle1\">\r\n            {checkoutToken.live.currency.symbol +\r\n              Number(totalShippingCost).toFixed(2)}\r\n          </Typography>\r\n        </ListItem>\r\n        <hr />\r\n        <ListItem style={{ padding: \"10px 0\" }}>\r\n          <ListItemText primary=\"total\" />\r\n          <Typography variant=\"subtitle1\" style={{ fontWeight: \"700\" }}>\r\n            {/* {totalPrice} */}\r\n            {checkoutToken.live.currency.symbol + totalPrice.toFixed(2)}\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\contexts\\ReactContext.js",["154"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport { commerce } from \"../lib/commerce\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useReactContext() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [cart, setCart] = useState({});\r\n  const [order, setOrder] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [orderError, setOrderError] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n  // ADDING PRODUCT FUNCTIONALITY TO REACT CONTEXT\r\n\r\n  const fetchProducts = async () => {\r\n    const { data } = await commerce.products.list();\r\n\r\n    setProducts(data);\r\n  };\r\n\r\n  const fetchCart = async () => {\r\n    setCart(await commerce.cart.retrieve());\r\n  };\r\n\r\n  const handleAddToCart = async (productId, quantity) => {\r\n    const { cart } = await commerce.cart.add(productId, quantity);\r\n    setCart(cart);\r\n  };\r\n\r\n  const handleUpdateCartQty = async (productId, quantity) => {\r\n    const response = await commerce.cart.update(productId, { quantity });\r\n    setCart(response.cart);\r\n  };\r\n\r\n  const handleRemoveFromCart = async (productId) => {\r\n    const { cart } = await commerce.cart.remove(productId);\r\n    setCart(cart);\r\n  };\r\n\r\n  const handleEmptyCart = async () => {\r\n    const { cart } = await commerce.cart.empty();\r\n    setCart(cart);\r\n  };\r\n\r\n  const refreshCart = async () => {\r\n    const newCart = await commerce.cart.refresh();\r\n    setCart(newCart);\r\n  };\r\n\r\n  const onCapturecheckout = async (checkoutTokenId, newOrder) => {\r\n    console.log(\"inside capture checkout\");\r\n    console.log(newOrder);\r\n    try {\r\n      const incomingOrder = await commerce.checkout.capture(\r\n        checkoutTokenId,\r\n        newOrder\r\n      );\r\n      setOrder(incomingOrder);\r\n      localStorage.setItem(\"order_receipt\", JSON.stringify(incomingOrder));\r\n      console.log(\"successful order: \");\r\n      console.log(incomingOrder);\r\n      //   refreshCart();\r\n    } catch (error) {\r\n      setErrorMessage(error);\r\n      console.log(error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    fetchCart();\r\n\r\n    const unnsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user && user.emailVerified === false) {\r\n        setCurrentUser(null);\r\n        auth.signOut();\r\n      } else {\r\n        setCurrentUser(user);\r\n        console.log(user);\r\n      }\r\n      setLoading(false);\r\n    });\r\n    return unnsubscribe;\r\n    //    const unnsubscribe = auth.onAuthStateChanged(user => {\r\n    //        setCurrentUser(user)\r\n    //        console.log(user)\r\n    //        setLoading(false)\r\n    //     })\r\n    //     return unnsubscribe\r\n  }, []);\r\n\r\n  // useEffect(()=> {\r\n  //     fetchProducts()\r\n  //     fetchCart()\r\n  // },[])\r\n\r\n  const value = {\r\n    products,\r\n    setOrder,\r\n    order,\r\n    orderError,\r\n    setOrderError,\r\n    setErrorMessage,\r\n    setCurrentUser,\r\n    errorMessage,\r\n    setCart,\r\n    cart,\r\n    currentUser,\r\n    loading,\r\n    setLoading,\r\n    setCart,\r\n    signup,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    onCapturecheckout,\r\n    refreshCart,\r\n    handleAddToCart,\r\n    handleRemoveFromCart,\r\n    handleUpdateCartQty,\r\n    handleEmptyCart,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\Login.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\UpdateProfile.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\firebase.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\index.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\lib\\commerce.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Auth\\Signup.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\Cart.jsx",["155","156","157"],"import {Container, Typography, Button , Grid, Table, CardActions, TableCell,TableHead, TableRow, TableContainer, TableBody,MenuItem, Select}  from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\nimport {useReactContext} from '../../contexts/ReactContext'\r\nimport CartItem from './CartItem/CartItem'\r\nimport {useGlobalStyles} from '../../utils/styles'\r\nimport useStyles from './cartStyles'\r\n\r\nconst Cart = () => {\r\n\r\n    const {cart, handleEmptyCart, currentUser} = useReactContext()\r\n\r\n    const globalStyles = useGlobalStyles()\r\n    const cartStyles = useStyles()\r\n\r\n    const EmptyCart = () =>  (\r\n        <Typography variant='subtitle1'>\r\n            Oops, Your Cart Is Empty,\r\n            <Link to='/' className={globalStyles.link}> Add some products!</Link>\r\n        </Typography>\r\n        )\r\n\r\n    const FilledCart = () => (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid container>\r\n                    <TableContainer>\r\n                        <Table aria-label=\"Orders\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell align=\"center\">Quantity</TableCell>\r\n                                <TableCell align=\"center\">Price</TableCell>\r\n                                <TableCell align=\"center\">Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {cart.line_items.map((item) => (\r\n                                    <CartItem item ={item} key={item.id}  />\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n\r\n                        {/* {cart.line_items.map((item) => (\r\n                            <Grid item xs={12} sm={4} lg={3} key={item.id}>\r\n                            <CartItem item ={item}  />\r\n                            </Grid>\r\n                        ))} */}\r\n            </Grid>\r\n                <div className={cartStyles.cardDetails} >\r\n                    <Typography variant='h4'>\r\n                        Subtotal: {cart.subtotal.formatted_with_symbol}\r\n                    </Typography>\r\n                    <div>\r\n\r\n                        <Button \r\n                        className={cartStyles.emptyButton} \r\n                        size='large' \r\n                        type='button' \r\n                        variant='contained' \r\n                        color='secondary' \r\n                        onClick={handleEmptyCart}>\r\n                            Empty Cart\r\n                        </Button>\r\n                        <Button \r\n                        component={Link} \r\n                        to='/checkout' \r\n                        className={cartStyles.checkoutButton} \r\n                        size='large' type='button' variant='contained' color='primary'>\r\n                        {\r\n                        !currentUser \r\n                        ? ('Login to Ckechout') \r\n                        : ('Checkout')\r\n                        }  \r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )\r\n\r\n    if(!cart.line_items) return <h1>Page is Loading...</h1> \r\n   \r\n    return  (\r\n        \r\n        <Container>\r\n            <div className={cartStyles.toolbar} />\r\n            <Typography className={cartStyles.cartTitle} variant='h5' gutterBottom>Your Shopping Cart</Typography>\r\n            {!cart.line_items.length ? <EmptyCart /> : <FilledCart />}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cart","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Navbar\\Navbar.jsx",["158"],"import React, {useState} from 'react'\r\nimport {AppBar, Toolbar, IconButton, Badge,  Typography} from '@material-ui/core'\r\nimport {ShoppingCart} from '@material-ui/icons'\r\nimport logo from '../../assets/iconpng.png'\r\nimport {Link, useLocation,  useHistory} from 'react-router-dom'\r\nimport {useReactContext} from '../../contexts/ReactContext'\r\nimport {useGlobalStyles} from '../../utils/styles'\r\nimport useStyles from './NavStyles'\r\nconst Navbar = () => {\r\n\r\n\r\n    const globalStyles = useGlobalStyles()\r\n    const navStyles = useStyles()\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const[error, setError] = useState('')\r\n    const { currentUser, logout, cart } = useReactContext()\r\n    const totalItems = cart.total_items\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    const handleLogout = async () => {\r\n        setError('')\r\n\r\n        if (window.confirm('Vill du logga ut?')){\r\n            try{\r\n                await logout()\r\n                history.push('/')\r\n            } catch(error){\r\n                setError('Faliled to log out')\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position='fixed' \r\n            // className={navStyles.NavAppBar} \r\n            color='inherit'>\r\n                <Toolbar>\r\n                    <Typography component={Link} to='/' variant='h6' className={navStyles.title} color='inherit'>\r\n                        <img src={logo} alt='commerce.js' height='25px' className={navStyles.image} />\r\n                        <span className={navStyles.moto}>Healthy Life</span>\r\n                    </Typography>\r\n                   \r\n                    <div className={navStyles.grow} />\r\n                    <div >\r\n                        { currentUser \r\n                        ? (\r\n                            <div style={{display: 'flex'}}>\r\n                                <Typography   onClick={handleLogout} style={{marginRight: '10px'}} className={globalStyles.link}>Log Out</Typography>\r\n                                <Typography  component={Link} to='/update-profile' className={globalStyles.link} >Profile</Typography>\r\n                            </div>\r\n                        ) \r\n                        :  <Typography  component={Link} to='/login' >Log In</Typography>\r\n                        }\r\n                    </div>\r\n\r\n                    { location.pathname === '/cart' || location.pathname === '/checkout' \r\n                    ? ('') \r\n                    :  (<div className={navStyles.button}>\r\n                        <IconButton component={Link} to='/cart' aria-label='show cart item' color='inherit' >\r\n                            <Badge badgeContent={totalItems}  color='secondary'>\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        </div>)  \r\n                    }\r\n\r\n                    {/* {location.pathname === '/' &&   (\r\n                    <div className={classes.button}>\r\n                         <IconButton component={Link} to='/cart' aria-label='show cart item' color='inherit' >\r\n                             <Badge badgeContent={totalItems}  color='secondary'>\r\n                                 <ShoppingCart />\r\n                             </Badge>\r\n                         </IconButton>\r\n                     </div>\r\n                    )} */}\r\n                   \r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\ProductView.jsx",["159"],"import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalStyles } from \"../../../utils/styles\";\r\nimport useStyles from \"./productViewStyles\";\r\nimport { useReactContext } from \"../../../contexts/ReactContext\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  MenuItem,\r\n  Select,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst ProductView = () => {\r\n  const { products, handleAddToCart } = useReactContext();\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const productId = useParams();\r\n\r\n  const globalStyles = useGlobalStyles();\r\n  const viewStyles = useStyles();\r\n\r\n  return (\r\n    <div className={viewStyles.content}>\r\n      <div className={viewStyles.toolbar} />\r\n      {products.map(\r\n        (product) =>\r\n          product.id === productId.id && (\r\n            <Slide key={product.name} direction=\"up\" in={true}>\r\n              <Grid container spacing={1} xl={8} className={viewStyles.center}>\r\n                <Grid item md={6}>\r\n                  <img\r\n                    src={product.media.source}\r\n                    alt={product.name}\r\n                    className={viewStyles.largeImage}\r\n                  />\r\n                </Grid>\r\n                <Grid item md={3} xs={12}>\r\n                  <List>\r\n                    <ListItem>\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant=\"h6\"\r\n                        color=\"textPrimary\"\r\n                        component=\"h1\"\r\n                      >\r\n                        {product.name}\r\n                      </Typography>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <Box\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: product.description,\r\n                        }}\r\n                      ></Box>\r\n                    </ListItem>\r\n                  </List>\r\n                </Grid>\r\n                <Grid item md={3} xs={12}>\r\n                  <Card>\r\n                    <List>\r\n                      <ListItem>\r\n                        <Grid container>\r\n                          <Grid item xs={6}>\r\n                            Price\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            {product.price.formatted_with_symbol}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </ListItem>\r\n\r\n                      <ListItem>\r\n                        <Grid alignItems=\"center\" container>\r\n                          <Grid item xs={6}>\r\n                            Status\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            {/* <Button color='primary' onClick={() => handleAddToCart(product.id, quantity)}>Buy</Button> */}\r\n                            {product.quantity > 0 ? (\r\n                              <Alert icon={false} severity=\"success\">\r\n                                In Stock\r\n                              </Alert>\r\n                            ) : (\r\n                              <Alert icon={false} severity=\"error\">\r\n                                Unavailable\r\n                              </Alert>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </ListItem>\r\n                      {product.quantity > 0 && (\r\n                        <>\r\n                          <ListItem>\r\n                            <Grid container justify=\"flex-end\">\r\n                              <Grid item xs={6}>\r\n                                Quantity\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <Select\r\n                                  labelId=\"quanitity-label\"\r\n                                  id=\"quanitity\"\r\n                                  fullWidth\r\n                                  onChange={(e) => setQuantity(e.target.value)}\r\n                                  value={quantity}\r\n                                >\r\n                                  {[...Array(product.quantity).keys()].map(\r\n                                    (x) => (\r\n                                      <MenuItem key={x + 1} value={x + 1}>\r\n                                        {x + 1}\r\n                                      </MenuItem>\r\n                                    )\r\n                                  )}\r\n                                </Select>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </ListItem>\r\n                          <ListItem>\r\n                            <Button\r\n                              type=\"button\"\r\n                              fullWidth\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                handleAddToCart(product.id, quantity)\r\n                              }\r\n                            >\r\n                              Add to cart\r\n                            </Button>\r\n                          </ListItem>\r\n                        </>\r\n                      )}\r\n                    </List>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </Slide>\r\n          )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductView;\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\Confirmation.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\utils\\styles.js",["160","161"],"import { createMuiTheme, makeStyles } from \"@material-ui/core\";\r\n\r\n// export const theme = createMuiTheme({\r\n//   typography: {\r\n//     h1: {\r\n//       fontSize: '2.2rem',\r\n//       fontWeight: 400,\r\n//       margin: '2rem 0',\r\n//     },\r\n//     h2: {\r\n//       fontSize: '1.8rem',\r\n//       fontWeight: 400,\r\n//       margin: '1rem 0',\r\n//     },\r\n//     h3: {\r\n//       fontSize: '1.4rem',\r\n//       fontWeight: 400,\r\n//       margin: '1rem 0',\r\n//     },\r\n//   },\r\n//   palette: {\r\n//     primary: {\r\n//       main: '#f0c000',\r\n//     },\r\n//     secondary: {\r\n//       main: '#208080',\r\n//     },\r\n//     error: {\r\n//       main: '#f04000',\r\n//     },\r\n//     background: {\r\n//       default: '#ffffff',\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst drawerWidth = 0;\r\n\r\nexport const useGlobalStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n\r\n  // link: {\r\n  //   margin: '1rem',\r\n  // },\r\n  main: {\r\n    padding: \"1rem\",\r\n  },\r\n  largeImage: {\r\n    maxWidth: \"50rem\",\r\n    width: \"100%\",\r\n  },\r\n  link: {\r\n    color: \"black\",\r\n    \"&:hover\": {\r\n      color: \"green\",\r\n      textDecoration: \"none\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n","D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\productViewStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Navbar\\NavStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\Product.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Products\\Product\\productStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\cartStyles.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\PaymentFormTestGateway.jsx",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\CheckoutForm\\checkoutStyels.js",[],"D:\\Webbutveckling\\Youtube_projects\\webstore-ecommerce.js\\Stevia\\src\\components\\Footer.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"170","line":1,"column":27,"nodeType":"168","messageId":"169","endLine":1,"endColumn":36},{"ruleId":"166","severity":1,"message":"171","line":4,"column":39,"nodeType":"168","messageId":"169","endLine":4,"endColumn":48},{"ruleId":"166","severity":1,"message":"172","line":37,"column":9,"nodeType":"168","messageId":"169","endLine":37,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":54,"column":16,"nodeType":"175","endLine":54,"endColumn":17},{"ruleId":"173","severity":1,"message":"176","line":62,"column":8,"nodeType":"177","endLine":62,"endColumn":10,"suggestions":"178"},{"ruleId":"173","severity":1,"message":"179","line":70,"column":8,"nodeType":"177","endLine":70,"endColumn":29,"suggestions":"180"},{"ruleId":"173","severity":1,"message":"181","line":45,"column":6,"nodeType":"177","endLine":45,"endColumn":8,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":144,"column":5,"nodeType":"185","messageId":"186","endLine":144,"endColumn":12},{"ruleId":"166","severity":1,"message":"187","line":1,"column":54,"nodeType":"168","messageId":"169","endLine":1,"endColumn":65},{"ruleId":"166","severity":1,"message":"188","line":1,"column":124,"nodeType":"168","messageId":"169","endLine":1,"endColumn":132},{"ruleId":"166","severity":1,"message":"189","line":1,"column":134,"nodeType":"168","messageId":"169","endLine":1,"endColumn":140},{"ruleId":"166","severity":1,"message":"190","line":16,"column":11,"nodeType":"168","messageId":"169","endLine":16,"endColumn":16},{"ruleId":"166","severity":1,"message":"172","line":26,"column":9,"nodeType":"168","messageId":"169","endLine":26,"endColumn":21},{"ruleId":"166","severity":1,"message":"191","line":1,"column":10,"nodeType":"168","messageId":"169","endLine":1,"endColumn":24},{"ruleId":"166","severity":1,"message":"192","line":37,"column":7,"nodeType":"168","messageId":"169","endLine":37,"endColumn":18},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'TextField' is defined but never used.","'globalStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'renders' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'checkoutToken'. Either include it or remove the dependency array.","ArrayExpression",["195"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has missing dependencies: 'calTotalShippingPrice' and 'totalShippingArray'. Either include them or remove the dependency array.",["197"],"no-dupe-keys","Duplicate key 'setCart'.","ObjectExpression","unexpected","'CardActions' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'error' is assigned a value but never used.","'createMuiTheme' is defined but never used.","'drawerWidth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [checkoutToken]",{"range":"204","text":"205"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"206","text":"207"},"Update the dependencies array to be: [calTotalShippingPrice, totalShippingArray]",{"range":"208","text":"209"},[2718,2720],"[checkoutToken]",[2979,3000],"[checkoutToken.id, shippingCountry, shippingSubdivision]",[1709,1711],"[calTotalShippingPrice, totalShippingArray]"]